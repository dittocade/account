---
import Layout from "@layouts/Layout.astro";
import Form from "@fancade-club/comps/forms/Form.astro";
import Input from "@fancade-club/comps/forms/Input.astro";
import Button from "@fancade-club/comps/forms/Button.astro";
import Heading from "@fancade-club/comps/layouts/Heading.astro";
import { db, connections } from "@lib/db";
import { eq } from "drizzle-orm";
import { actions } from "astro:actions";

const { user } = Astro.locals;
if (!user) return Astro.redirect("/signup");

const connected = await db
  .select({ provider: connections.provider })
  .from(connections)
  .where(eq(connections.userId, user.id));
const connectedProviders = connected.map((c) => c.provider);
const prefix = (provider: string) =>
  connectedProviders.includes(provider) ? "Remove" : "Add";
const path = (provider: string) =>
  `/connections/${provider}/${connectedProviders.includes(provider) ? "remove" : "request"}`;
---

<Layout title="Settings">
  <Form method="POST" action={"/settings" + actions.settings}>
    <Input name="name" label="Display Name" value={user.name} />
    <Input name="slug" label="Username" value={user.slug} />
    <Input type="password" name="password" label="Password" />
    <Button>Update</Button>
  </Form>
  <Heading level={2} id="manage">Connections</Heading>
  <Form>
    <Button formaction={path("discord")}>{prefix("discord")} Discord</Button>
    <Button formaction={path("github")}>{prefix("github")} GitHub</Button>
  </Form>
  <Heading level={2} id="manage">Account Management</Heading>
  <Form>
    <Button formmethod="POST" formaction={"/" + actions.logout}>Log out</Button>
    <Button formaction={"/delete"}>Delete account</Button>
  </Form>
</Layout>

<script>
  import { z } from "zod";
  import { slug, emptyString, password } from "@lib/schema";
  import { validateInput } from "@lib/validate";

  validateInput("name-input", z.string());
  validateInput("slug-input", slug());
  validateInput("password-input", emptyString().or(password()));
</script>
